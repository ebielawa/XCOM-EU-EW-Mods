AUTHOR=eclipse666
DESCRIPTION=Meld Alarm - makes it a bit easier to tell if the Meld is about to expire. 

In the standard game the meld's throbbing sound gets faster as it's about to expire. It starts with a slow throbbing at first, then changes to a medium throbbing with 2 turns to go, and finally a fast throbbing on the last turn. The medium and fast throbs sound quite similar, so it can be a little tricky determining if the meld's about to expire.

This mod changes the sounds as follows:
If there are more than 2 turns left, the meld will be silent (no throbbing sound at all).
With 2 turns left, there will be a slow throbbing sound.
With 1 turn left the "offscreen meld notification" sound will play once as an alarm, and there will be a fast throbbing sound. It's quite easy to tell the difference between the slow and fast throbbing.

//This script was generated by HexToPseudoCode decompiler for use with PatchUPK/PatcherGUI tool
UPK_FILE = XComGame.upk

OBJECT = XComMeldContainerActor.UpdateLoopCueComponent : AUTO
[REPLACEMENT_CODE]
/*(0x0000/0x0000)*/ 07 [@label_0x00A2] 82 82 81 2D 01 <@m_bCollected> 16 18 [@] ( 81 1B <IsDestroyed> 16 16 16 ) 18 [@] ( 2D 01 <@m_bHasBeenSeen> 16 ) 
/*(0x002F/0x0027)*/ 	05 <@m_iTurnsUntilDestroyed> 00 01 <@m_iTurnsUntilDestroyed> 
/*(0x0042/0x0032)*/ 	0A [@label_0x0054] 25 
/*(0x0046/0x0036)*/ 		0F 00 <.kLoopCue> 2A 
/*(0x0051/0x003D)*/ 		06 [@label_0x00A2] 
/*(0x0054/0x0040)*/ 	[#label_0x0054]
/*(0x0054/0x0040)*/ 	0A [@label_0x006E] 26 

// play the meld notification sound when there's just one turn left
1C <Engine.Actor.PlaySound>
2E <Engine.SoundCue> 1C <Core.Object.DynamicLoadObject> 1F <%t "SoundXPackFX.MELDNotifyCue"> 20 <Engine.SoundCue> 4A 16 
4A 4A 4A 4A 4A 16 

/*(0x0058/0x0044)*/ 		0F 00 <.kLoopCue> 01 <@m_kLoopFastCue> // fast throb when 1 turn left
/*(0x006B/0x004F)*/ 		06 [@label_0x00A2] 
/*(0x006E/0x0052)*/ 	[#label_0x006E]
/*(0x006E/0x0052)*/ 	0A [@label_0x0089] 2C 02 
/*(0x0073/0x0057)*/ 		0F 00 <.kLoopCue> 01 <@m_kLoopSlowCue> // play slow throb when 2 turns left
/*(0x0086/0x0062)*/ 		06 [@label_0x00A2] 
/*(0x0089/0x0065)*/ 	[#label_0x0089]
/*(0x0089/0x0065)*/ 	0A FF FF 
/*(0x008C/0x0068)*/ 	0F 00 <.kLoopCue> 2A // Silence if theres more than 2 turns left // 01 <@m_kLoopSlowCue> 
/*(0x009F/0x0073)*/ 	06 [@label_0x00A2] 
/*(0x00A2/0x0076)*/ [#label_0x00A2]

/*
1C <Engine.Actor.PlaySound>
2E <Engine.SoundCue> 1C <Core.Object.DynamicLoadObject> 1F <%t "SoundXPackFX.MELDNotifyCue"> 20 <Engine.SoundCue> 4A 16 
 //01 <XComMeldContainerActor.m_kPowerDownCue> 
4A 4A 4A 4A 4A 16 
*/


//0F 00 <.kLoopCue> 2E <Engine.SoundCue> 1C <Core.Object.DynamicLoadObject> 1F <%t "SoundXPackFX.MELDNotifyCue"> 20 <Engine.SoundCue> 4A 16 

/*(0x00A2/0x0076)*/ 07 [@label_0x0146] 77 00 <.kLoopCue> 19 01 <@m_kLoopCueComponent> [@] <Engine.AudioComponent.SoundCue> 00 ( 01 <Engine.AudioComponent.SoundCue> ) 16 
/*(0x00CE/0x0092)*/ 	07 [@label_0x0127] 77 00 <.kLoopCue> 2A 16 
/*(0x00DD/0x009D)*/ 		0F 19 01 <@m_kLoopCueComponent> [@] <Engine.AudioComponent.SoundCue> 00 ( 01 <Engine.AudioComponent.SoundCue> ) 00 <.kLoopCue> 
/*(0x0105/0x00B5)*/ 		19 01 <@m_kLoopCueComponent> [@] <NullRef> 00 ( 1C <Engine.AudioComponent.Play> 16 ) 
/*(0x0124/0x00C8)*/ 		06 [@label_0x0146] 
/*(0x0127/0x00CB)*/ 	[#label_0x0127]
/*(0x0127/0x00CB)*/ 	19 01 <@m_kLoopCueComponent> [@] <NullRef> 00 ( 1C <Engine.AudioComponent.Stop> 16 ) 
/*(0x0146/0x00DE)*/ [#label_0x0146]

/*(0x0146/0x00DE)*/ 04 0B 
/*(0x0148/0x00E0)*/ 53 
