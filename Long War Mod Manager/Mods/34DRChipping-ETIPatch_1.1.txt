MOD_NAME=DR Chipping for Long War - ETI Patch
AUTHOR=JC Lewis, with credit to eclipse666's Enhanced Tactical Info.
DESCRIPTION=Patches DR Chipping to work with Enhanced Tactical Info.

/*
IMPORTANT: This mod needs to be installed last, as to not be overwritten. Install this patch if you're using eclipse666's Enhanced Tactical Info mod. Make sure you uninstall any previous versions of this mod before installing.
*/

//This script was generated by HexToPseudoCode decompiler for use with PatchUPK/PatcherGUI tool
UPK_FILE = XComGame.upk
OBJECT = XGUnit.AbsorbDamage : AUTO
[REPLACEMENT_CODE]
/*(0x0000/0x0000)*/ 0F 00 <.fReturnDmg> 38 3F 00 <.IncomingDamage> 
/*(0x0015/0x000D)*/ 07 [@label_0x0059] 97 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 2C 64 16 25 16 

	0F 00 <.fReturnDmg> AF 00 <.fReturnDmg> F5 AC 38 3F 93 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 2C 64 16 91 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 1D <%i 1000000> 16 1D <%i 10000> 16 16 38 3F 2C 0A 16 38 3F 25 16 16	
	
/*(0x0058/0x0040)*/ 	0B 
/*(0x0059/0x0041)*/ [#label_0x0059]
/*(0x0059/0x0041)*/ 07 [@label_0x0095] 82 81 1B <IsAI> 16 16 18 [@] ( 97 01 <@m_iWillCheatBonus> 25 16 16 ) 
/*(0x0079/0x005D)*/ 	B9 00 <.fReturnDmg> AC 38 3F 01 <@m_iWillCheatBonus> 38 3F 2C 32 16 16 
/*(0x0095/0x0071)*/ [#label_0x0095]
/*(0x0095/0x0071)*/ 07 [@label_0x00EE] 82 82 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 86 16 ) 18 [@] ( 97 01 <@m_iDamageControlTurns> 25 16 16 ) 18 [@] ( B1 00 <.fReturnDmg> 38 3F 26 16 16 ) 
/*(0x00DE/0x00AE)*/ 	B9 00 <.fReturnDmg> 1E <%f 1.5> 16 
/*(0x00EE/0x00BA)*/ [#label_0x00EE]
/*(0x00EE/0x00BA)*/ 07 [@label_0x010B] 2D 01 <XGUnitNativeBase.m_bOneForAllActive> 
/*(0x00FB/0x00C3)*/ 	B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x010B/0x00CF)*/ [#label_0x010B]
/*(0x010B/0x00CF)*/ 07 [@label_0x01BB] 9A 19 1B <GetCharacter> 16 [@] <XGCharacter.m_eType> 00 ( 01 <XGCharacter.m_eType> ) 2C 2E 16 
/*(0x0131/0x00ED)*/ 	2F 61 30 20 <Class.XGUnit> 01 <@m_kZombieVictim> 4A 16 [@label_0x01BA] 
/*(0x014A/0x00FE)*/ 		07 [@label_0x01B9] 82 19 01 <@m_kZombieVictim> [@] <XGUnitNativeBase.IsAliveAndWell.ReturnValue> 00 ( 1B <IsAliveAndWell> 4A 16 ) 18 [@] ( 9A 19 19 01 <@m_kZombieVictim> [@] <XGUnit.GetCharacter.ReturnValue> 00 ( 1B <GetCharacter> 16 ) [@] <XGCharacter.m_eType> 00 ( 01 <XGCharacter.m_eType> ) 2C 26 16 16 ) 
/*(0x01AA/0x0146)*/ 			B9 00 <.fReturnDmg> 38 3F 2C 0F 16 
/*(0x01B9/0x0151)*/ 		[#label_0x01B9]
/*(0x01B9/0x0151)*/ 		31 
/*(0x01BA/0x0152)*/ 	[#label_0x01BA]
/*(0x01BA/0x0152)*/ 	30 
/*(0x01BB/0x0153)*/ [#label_0x01BB]

	/*(0x01BB/0x0153)*/ 07 [@label_0x01DD] 77 1B <GetAppliedAbility> 2C 1F 16 2A 16 
	/*(0x01CD/0x0165)*/ 	B6 00 <.fReturnDmg> 1E <%f 0.6> 16 
	/*(0x01DD/0x0171)*/ [#label_0x01DD]
	/*(0x01DD/0x0171)*/ 07 [@label_0x02BA] 77 00 <.kWeapon> 2A 16 
	/*(0x01EC/0x017C)*/ 	07 [@label_0x02BA] 82 84 19 00 <.kWeapon> [@] <XGWeapon.IsMelee.ReturnValue> 00 ( 1B <IsMelee> 16 ) 18 [@] ( 19 00 <.kWeapon> [@] <Core.Object.IsA.ReturnValue> 00 ( C5 21 <XGWeapon_MEC_KineticStrike> 16 ) 16 ) 18 [@] ( 84 82 77 1B <GetInventory> 16 2A 16 18 [@] ( 77 19 1B <GetInventory> 16 [@] <XGInventory.GetRearBackpackItem.ReturnValue> 00 ( 1B <GetRearBackpackItem> 24 48 16 ) 2A 16 16 ) 18 [@] ( 9A 35 <XGTacticalGameCoreNativeBase.TCharacter.iType> <XGTacticalGameCoreNativeBase.TCharacter> 00 00 19 1B <GetCharacter> 16 [@] <XGCharacter.m_kChar> 00 ( 01 <XGCharacter.m_kChar> ) 2C 0D 16 16 ) 16 ) 
	/*(0x02AA/0x0216)*/ 		B6 00 <.fReturnDmg> 1E <%f 0.6> 16 
	/*(0x02BA/0x0222)*/ [#label_0x02BA]
	/*(0x02BA/0x0222)*/ 07 [@label_0x02DA] 97 1B <GetShieldHP> 16 25 16 
	/*(0x02CA/0x0232)*/ 	B6 00 <.fReturnDmg> 1E <%f 0.5> 16 
	/*(0x02DA/0x023E)*/ [#label_0x02DA]
	/*(0x02DA/0x023E)*/ 07 [@label_0x036F] 82 77 00 <.kDamageCauser> 2A 16 18 [@] ( 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 8F 16 ) 16 ) 
	/*(0x0310/0x026C)*/ 	0F 00 <.fDist> E1 D8 1B <GetLocation> 16 19 00 <.kDamageCauser> [@] <XGUnitNativeBase.GetLocation.ReturnValue> 00 ( 1B <GetLocation> 16 ) 16 16 
	/*(0x0347/0x0297)*/ 	07 [@label_0x036F] B2 00 <.fDist> AB 38 3F 2C 04 38 3F 2C 60 16 16 
	/*(0x035F/0x02AB)*/ 		B6 00 <.fReturnDmg> 1E <%f 0.67> 16 
	/*(0x036F/0x02B7)*/ [#label_0x036F]
	/*(0x036F/0x02B7)*/ 07 [@label_0x03E1] 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 8E 16 ) 
	/*(0x0394/0x02D8)*/ 	07 [@label_0x03E1] B1 00 <.fReturnDmg> 38 3F 26 16 
	/*(0x03A5/0x02E5)*/ 		B6 00 <.fReturnDmg> AE 1E <%f 0.6> AB 1E <%f 0.4> F4 AC 1E <%f 2> 00 <.fReturnDmg> 16 1E <%f 1> 16 16 16 16 
	/*(0x03D5/0x030D)*/ 		14 2D 01 <@m_bAbsorptionFieldsWorked> 27 
	/*(0x03E1/0x0315)*/ [#label_0x03E1]

/*(0x03E1/0x0315)*/ 07 [@label_0x041C] 1B <IsPoisoned> 16 
/*(0x03EE/0x0322)*/ 	B8 00 <.fReturnDmg> F5 38 3F 2C 03 AB 1E <%f 0.5> AF 38 3F 00 <.IncomingDamage> 00 <.fReturnDmg> 16 16 16 16 
/*(0x041C/0x0344)*/ [#label_0x041C]
/*(0x041C/0x0344)*/ 06 [@label_0x04B5] 
/*(0x041F/0x0347)*/ 77 00 <.kDamageCauser> 2A 16 
/*(0x042B/0x034F)*/ 07 [@label_0x04B5] 82 1B <IsDormant> 4A 16 18 [@] ( 19 00 <.kDamageCauser> [@] <XGEnemyUnit.CanSee.ReturnValue> 00 ( 1B <CanSee> 17 16 ) 16 ) 
/*(0x045E/0x037A)*/ 	07 [@label_0x04A2] 77 00 <.kWeapon> 2A 16 
/*(0x046D/0x0385)*/ 		07 [@label_0x04A2] 19 00 <.kWeapon> [@] <XGWeapon.DoesRadiusDamage.ReturnValue> 00 ( 1B <DoesRadiusDamage> 16 ) 
/*(0x048F/0x039F)*/ 			B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x049F/0x03AB)*/ 			06 [@label_0x04B2] 
/*(0x04A2/0x03AE)*/ 	[#label_0x04A2]
/*(0x04A2/0x03AE)*/ 	B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x04B2/0x03BA)*/ 	[#label_0x04B2]
/*(0x04B2/0x03BA)*/ 	06 [@label_0x0629] 
/*(0x04B5/0x03BD)*/ [#label_0x04B5]
/*(0x04B5/0x03BD)*/ 07 [@label_0x0629] 1C <XGUnitNativeBase.IsInCover> 16 
/*(0x04C2/0x03C6)*/ 	07 [@label_0x0629] 81 84 1B <IsFlankedBy> 00 <.kDamageCauser> 16 18 [@] ( 82 77 00 <.kWeapon> 2A 16 18 [@] ( 19 00 <.kWeapon> [@] <Core.Object.IsA.ReturnValue> 00 ( C5 21 <XGWeapon_NeedleGrenade> 16 ) 16 ) 16 ) 16 
/*(0x0510/0x0404)*/ 		0F 00 <.fDist> 00 <.fReturnDmg> 
/*(0x0523/0x040F)*/ 		07 [@label_0x0543] 1B <IsInLowCover> 16 
/*(0x0530/0x041C)*/ 			B9 00 <.fReturnDmg> 1E <%f 0.667> 16 
/*(0x0540/0x0428)*/ 			06 [@label_0x0553] 
/*(0x0543/0x042B)*/ 		[#label_0x0543]
/*(0x0543/0x042B)*/ 		B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x0553/0x0437)*/ 		[#label_0x0553]
/*(0x0553/0x0437)*/ 		07 [@label_0x0590] 1B <IsHunkeredDown> 16 
/*(0x0560/0x0444)*/ 			07 [@label_0x0580] 1B <IsInLowCover> 16 
/*(0x056D/0x0451)*/ 				B9 00 <.fReturnDmg> 1E <%f 0.667> 16 
/*(0x057D/0x045D)*/ 				06 [@label_0x0590] 
/*(0x0580/0x0460)*/ 			[#label_0x0580]
/*(0x0580/0x0460)*/ 			B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x0590/0x046C)*/ 		[#label_0x0590]
/*(0x0590/0x046C)*/ 		07 [@label_0x05C5] 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 11 16 ) 
/*(0x05B5/0x048D)*/ 			B9 00 <.fReturnDmg> 1E <%f 1.5> 16 
/*(0x05C5/0x0499)*/ 		[#label_0x05C5]
/*(0x05C5/0x0499)*/ 		07 [@label_0x0629] 19 1B <GetCharacter> 16 [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 8C 16 ) 
/*(0x05EA/0x04BA)*/ 			07 [@label_0x0629] 1B <HasBonus> 2C AA 16 
/*(0x05F9/0x04C9)*/ 				07 [@label_0x0619] 1B <IsInLowCover> 16 
/*(0x0606/0x04D6)*/ 					B9 00 <.fReturnDmg> 1E <%f 0.667> 16 
/*(0x0616/0x04E2)*/ 					06 [@label_0x0629] 
/*(0x0619/0x04E5)*/ 				[#label_0x0619]
/*(0x0619/0x04E5)*/ 				B9 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x0629/0x04F1)*/ [#label_0x0629]
/*(0x0629/0x04F1)*/ 07 [@label_0x0881] 77 00 <.kDamageCauser> 2A 16 
/*(0x0638/0x04FC)*/ 	07 [@label_0x0682] 19 19 00 <.kDamageCauser> [@] <XGUnit.GetCharacter.ReturnValue> 00 ( 1B <GetCharacter> 16 ) [@] <XGCharacter.HasUpgrade.ReturnValue> 00 ( 1B <HasUpgrade> 2C 8A 16 ) 
/*(0x0672/0x052A)*/ 		B8 00 <.fReturnDmg> 1E <%f 1> 16 
/*(0x0682/0x0536)*/ 	[#label_0x0682]
/*(0x0682/0x0536)*/ 	07 [@label_0x075C] 12 20 <Class.XGTacticalGameCoreNativeBase> [@] <XGTacticalGameCoreNativeBase.TInventoryHasItemType.ReturnValue> 00 ( 1C <XGTacticalGameCoreNativeBase.TInventoryHasItemType> 35 <XGTacticalGameCoreNativeBase.TCharacter.kInventory> <XGTacticalGameCoreNativeBase.TCharacter> 00 01 19 19 00 <.kDamageCauser> [@] <XGUnit.GetCharacter.ReturnValue> 00 ( 1B <GetCharacter> 16 ) [@] <XGCharacter.m_kChar> 00 ( 01 <XGCharacter.m_kChar> ) 2C C6 16 ) 
/*(0x06ED/0x057D)*/ 		07 [@label_0x075C] 82 82 77 00 <.kWeapon> 2A 16 18 [@] ( 81 19 00 <.kWeapon> [@] <XGWeapon.HasProperty.ReturnValue> 00 ( 1B <HasProperty> 2C 06 16 ) 16 16 ) 18 [@] ( 81 19 00 <.kWeapon> [@] <XGWeapon.HasProperty.ReturnValue> 00 ( 1B <HasProperty> 2C 02 16 ) 16 16 ) 
/*(0x074C/0x05C8)*/ 			B8 00 <.fReturnDmg> 1E <%f 2> 16 
/*(0x075C/0x05D4)*/ 	[#label_0x075C]
/*(0x075C/0x05D4)*/ 	07 [@label_0x0861] 77 00 <.kWeapon> 2A 16 
/*(0x076B/0x05DF)*/ 		07 [@label_0x0861] 9A 38 3A 12 20 <Class.XGTacticalGameCore> [@] <XGTacticalGameCore.GetWeaponClass.ReturnValue> 00 ( 1B <GetWeaponClass> 19 00 <.kWeapon> [@] <XGItem.ItemType.ReturnValue> 00 ( 1B <ItemType> 16 ) 16 ) 2C 03 16 
/*(0x07B2/0x0616)*/ 			07 [@label_0x0838] 97 9C 1A 2C 7B 35 <XGTacticalGameCoreNativeBase.TCharacter.aUpgrades> <XGTacticalGameCoreNativeBase.TCharacter> 00 00 19 19 00 <.kDamageCauser> [@] <XGUnit.GetCharacter.ReturnValue> 00 ( 1B <GetCharacter> 16 ) [@] <XGCharacter.m_kChar> 00 ( 01 <XGCharacter.m_kChar> ) 2C 20 16 25 16 
/*(0x0806/0x0652)*/ 				B8 00 <.fReturnDmg> AB 38 3F 2C 02 12 20 <Class.XGTacticalGameCore> [@] <XGTacticalGameCoreNativeBase.COUNCIL_FUNDING_MULTIPLIER_EASY> 00 ( 02 <XGTacticalGameCoreNativeBase.COUNCIL_FUNDING_MULTIPLIER_EASY> ) 16 16 
/*(0x0835/0x0671)*/ 				06 [@label_0x0861] 
/*(0x0838/0x0674)*/ 			[#label_0x0838]
/*(0x0838/0x0674)*/ 			B8 00 <.fReturnDmg> 12 20 <Class.XGTacticalGameCore> [@] <XGTacticalGameCoreNativeBase.COUNCIL_FUNDING_MULTIPLIER_EASY> 00 ( 02 <XGTacticalGameCoreNativeBase.COUNCIL_FUNDING_MULTIPLIER_EASY> ) 16 
/*(0x0861/0x068D)*/ 	[#label_0x0861]
/*(0x0861/0x068D)*/ 	0F 00 <.fReturnDmg> F4 00 <.fReturnDmg> 38 3F 00 <.IncomingDamage> 16 
/*(0x0881/0x06A1)*/ [#label_0x0881]
/*(0x0881/0x06A1)*/ 07 [@label_0x0A85] B0 00 <.fReturnDmg> 38 3F 00 <.IncomingDamage> 16 
/*(0x089A/0x06B2)*/ 	07 [@label_0x0973] 77 00 <.kDamageCauser> 2A 16 
/*(0x08A9/0x06BD)*/ 		07 [@label_0x0973] 82 77 00 <.kWeapon> 2A 16 18 [@] ( 19 00 <.kWeapon> [@] <XGWeapon.HasProperty.ReturnValue> 00 ( 1B <HasProperty> 2C 06 16 ) 16 ) 
/*(0x08DE/0x06E6)*/ 			07 [@label_0x0973] 81 12 20 <Class.XGTacticalGameCoreNativeBase> [@] <XGTacticalGameCoreNativeBase.TInventoryHasItemType.ReturnValue> 00 ( 1C <XGTacticalGameCoreNativeBase.TInventoryHasItemType> 35 <XGTacticalGameCoreNativeBase.TCharacter.kInventory> <XGTacticalGameCoreNativeBase.TCharacter> 00 01 19 19 00 <.kDamageCauser> [@] <XGUnit.GetCharacter.ReturnValue> 00 ( 1B <GetCharacter> 16 ) [@] <XGCharacter.m_kChar> 00 ( 01 <XGCharacter.m_kChar> ) 2C C5 16 ) 16 
/*(0x094B/0x072F)*/ 				B9 00 <.fReturnDmg> AB 1E <%f 0.5> AF 38 3F 00 <.IncomingDamage> 00 <.fReturnDmg> 16 16 16 
/*(0x0973/0x074B)*/ 	[#label_0x0973]
/*(0x0973/0x074B)*/ 	0F 00 <.fReturnDmg> F5 00 <.fReturnDmg> 38 3F 25 16 
/*(0x098B/0x075B)*/ 	07 [@label_0x09DF] 82 77 00 <.kWeapon> 2A 16 18 [@] ( 19 00 <.kWeapon> [@] <Core.Object.IsA.ReturnValue> 00 ( C5 21 <XGWeapon_MEC_KineticStrike> 16 ) 16 ) 
/*(0x09BF/0x0783)*/ 		0F 00 <.iReturnDmg> 1C <Core.Object.FFloor> 00 <.fReturnDmg> 16 
/*(0x09DC/0x0794)*/ 		06 [@label_0x0A43] 
/*(0x09DF/0x0797)*/ 	[#label_0x09DF]
/*(0x09DF/0x0797)*/ 	07 [@label_0x0A26] B0 C3 16 AF 00 <.fReturnDmg> 38 3F 1C <Core.Object.FFloor> 00 <.fReturnDmg> 16 16 16 

/*(0x0A06/0x07B2)*/ 		0F 00 <.iReturnDmg> 1C <Core.Object.FCeil> 00 <.fReturnDmg> 16 

/*(0x0A23/0x07C3)*/ 		06 [@label_0x0A43] 
/*(0x0A26/0x07C6)*/ 	[#label_0x0A26]

// if incoming damage value = 12345 it's a call from the enhanced tac mod, so always returns the least amt of damage reduction (to prevent randomness)
						07 [@specialcase]
							9A // ==
								00 <.IncomingDamage>
								1d <%i 12345>
							16
							
							0F 00 <.iReturnDmg> 1C <Core.Object.FCeil> 00 <.fReturnDmg> 16 
							06 [@label_0x0A43]
						
						[#specialcase]
/*(0x0A26/0x07C6)*/ 	0F 00 <.iReturnDmg> 1C <Core.Object.FFloor> 00 <.fReturnDmg> 16 

/*(0x0A43/0x07D7)*/ 	[#label_0x0A43]
/*(0x0A43/0x07D7)*/ 	07 [@label_0x0A7B] 97 93 00 <.IncomingDamage> 00 <.iReturnDmg> 16 25 16 
/*(0x0A5D/0x07E9)*/ 		0F 01 <@m_bCantBeHurt> 93 00 <.IncomingDamage> 00 <.iReturnDmg> 16 
/*(0x0A7B/0x07FB)*/ 	[#label_0x0A7B]

//		if(iReturnDmg >= (IncomingDamage - iReturnDmg))
		07 [@dr_check_end] 99 00 <.iReturnDmg> 93 00 <.IncomingDamage> 00 <.iReturnDmg> 16 16
//          if((((m_aCurrentStats[4] % 1000000) / 10000) + iReturnDmg*4) > 99)
			07 [@dr_check_else] 97 92 91 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 1D <%i 1000000> 16 1D <%i 10000> 16 90 00 <.iReturnDmg> 1D <%i 4> 16 16 1D <%i 99> 16
//              m_aCurrentStats[4] = (m_aCurrentStats[4] % 10000) + 990000;
				0F 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 92 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 1D <%i 10000> 16 1D <%i 990000> 16	
//      	else
			06 [@dr_check_end]
			[#dr_check_else]
//          	m_aCurrentStats[4] += (Min(iReturnDmg*4, 99) * 10000);
				B8 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 90 F9 90 00 <.iReturnDmg> 1D <%i 4> 16 1D <%i 99> 16 1D <%i 10000> 16 16	
		[#dr_check_end]

//      if(iReturnDmg > 0)		
		07 [@dmg_check_end] 97 00 <.iReturnDmg> 25 16
//          if((((m_aCurrentStats[4] % 1000000) / 10000) + iReturnDmg) > 99)
			07 [@dmg_check_else] 97 92 91 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 1D <%i 1000000> 16 1D <%i 10000> 16 00 <.iReturnDmg> 16 1D <%i 99> 16
//              m_aCurrentStats[4] = (m_aCurrentStats[4] % 10000) + 990000;
				0F 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 92 FD 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 1D <%i 10000> 16 1D <%i 990000> 16
//          else
			06 [@dmg_check_end]
			[#dmg_check_else]
//              m_aCurrentStats[4] += (Min(iReturnDmg, 99) * 10000);
				B8 1A 2C 04 01 <XGUnitNativeBase.m_aCurrentStats> 90 F9 00 <.iReturnDmg> 1D <%i 99> 16 1D <%i 10000> 16 16
		[#dmg_check_end]

/*(0x0A7B/0x07FB)*/ 	04 00 <.iReturnDmg> 
/*(0x0A85/0x0801)*/ [#label_0x0A85]
/*(0x0A85/0x0801)*/ 04 00 <.IncomingDamage> 
/*(0x0A93/0x080B)*/ 53 

/*
    m_aCharacterName[4]="Sectoid"
    m_aCharacterName[5]="Floater"
    m_aCharacterName[6]="Thin Man"
    m_aCharacterName[7]="Muton"
    m_aCharacterName[8]="Cyberdisc"
    m_aCharacterName[9]="Sectoid Commander"
    m_aCharacterName[10]="Heavy Floater"
    m_aCharacterName[11]="Muton Elite"
    m_aCharacterName[12]="Ethereal"
    m_aCharacterName[13]="Chryssalid"
    m_aCharacterName[14]="Zombie"
    m_aCharacterName[15]="Muton Berserker"
    m_aCharacterName[16]="Sectopod"
    m_aCharacterName[17]="Drone"
    m_aCharacterName[18]="Outsider"
    m_aCharacterName[19]="Uber Ethereal"
    m_aCharacterName[21]="Mechtoid"
    m_aCharacterName[23]="Seeker"
    m_aCharacterName[24]="EXALT Operative"
    m_aCharacterName[25]="EXALT Sniper"
    m_aCharacterName[26]="EXALT Heavy"
    m_aCharacterName[27]="EXALT Medic"
    m_aCharacterName[28]="EXALT Elite Operative"
    m_aCharacterName[29]="EXALT Elite Sniper"
    m_aCharacterName[30]="EXALT Elite Heavy"
    m_aCharacterName[31]="EXALT Elite Medic"
*/



